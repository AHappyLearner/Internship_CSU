# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'curveapply.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from qtpy.QtCore import Qt
from PyQt5.QtWidgets import (QApplication, QWidget, QTableWidget, QMainWindow,
                      QTableWidgetItem, QAbstractItemView, QPushButton)
import SealStandards
import datahandle

class Ui_CurveApply(object):
    def setupUi(self, MainWindow):
        self.Form = MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1239, 584)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pb_query = QtWidgets.QPushButton(self.centralwidget)
        self.pb_query.setGeometry(QtCore.QRect(1110, 120, 81, 28))
        self.pb_query.setObjectName("pb_query")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 210, 1171, 321))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(14)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(13, item)
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 991, 81))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_4 = QtWidgets.QLabel(self.layoutWidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 1, 4, 1, 1)
        self.cb_name = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_name.setObjectName("SealName")
        self.gridLayout.addWidget(self.cb_name, 0, 5, 1, 2)
        self.cb_mat = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_mat.setObjectName("SealMaterial")
        self.gridLayout.addWidget(self.cb_mat, 1, 5, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.cb_dept = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_dept.setObjectName("ApplyDept")
        self.gridLayout.addWidget(self.cb_dept, 0, 1, 1, 3)
        self.label = QtWidgets.QLabel(self.layoutWidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.cb_size = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_size.setObjectName("SealSize")
        self.gridLayout.addWidget(self.cb_size, 1, 1, 1, 2)
        self.pb_size = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_size.setMaximumSize(QtCore.QSize(30, 30))
        self.pb_size.setObjectName("pb_size")
        self.gridLayout.addWidget(self.pb_size, 1, 3, 1, 1)
        self.pb_mat = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_mat.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_mat.setObjectName("pb_mat")
        self.gridLayout.addWidget(self.pb_mat, 1, 6, 1, 1)
        self.cb_pay_dept = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_pay_dept.setObjectName("FeeDept")
        self.gridLayout.addWidget(self.cb_pay_dept, 2, 1, 1, 6)
        self.label_5 = QtWidgets.QLabel(self.layoutWidget)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 0, 4, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.cb_shape = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_shape.setObjectName("SealShape")
        self.gridLayout_2.addWidget(self.cb_shape, 0, 4, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.layoutWidget)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 1, 3, 1, 1)
        self.pb_reason = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_reason.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_reason.setObjectName("pb_reason")
        self.gridLayout_2.addWidget(self.pb_reason, 2, 5, 1, 1)
        self.pb_shape = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_shape.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_shape.setObjectName("pb_shape")
        self.gridLayout_2.addWidget(self.pb_shape, 0, 5, 1, 1)
        self.pb_font = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_font.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_font.setObjectName("pb_font")
        self.gridLayout_2.addWidget(self.pb_font, 1, 2, 1, 1)
        self.pb_use = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_use.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_use.setObjectName("pb_use")
        self.gridLayout_2.addWidget(self.pb_use, 1, 5, 1, 1)
        self.cb_type = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_type.setObjectName("SealType")
        self.gridLayout_2.addWidget(self.cb_type, 0, 1, 1, 1)
        self.cb_reason = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_reason.setObjectName("SealCurRreason")
        self.gridLayout_2.addWidget(self.cb_reason, 2, 1, 1, 4)
        self.cb_use = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_use.setObjectName("SealUse")
        self.gridLayout_2.addWidget(self.cb_use, 1, 4, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.layoutWidget)
        self.label_8.setObjectName("label_8")
        self.gridLayout_2.addWidget(self.label_8, 2, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.layoutWidget)
        self.label_9.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_9.setObjectName("label_9")
        self.gridLayout_2.addWidget(self.label_9, 0, 3, 1, 1)
        self.cb_font = QtWidgets.QComboBox(self.layoutWidget)
        self.cb_font.setMaximumSize(QtCore.QSize(300, 16777215))
        self.cb_font.setObjectName("SealFont")
        self.gridLayout_2.addWidget(self.cb_font, 1, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.layoutWidget)
        self.label_6.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 0, 0, 1, 1)
        self.pb_type = QtWidgets.QPushButton(self.layoutWidget)
        self.pb_type.setMaximumSize(QtCore.QSize(30, 16777215))
        self.pb_type.setObjectName("pb_type")
        self.gridLayout_2.addWidget(self.pb_type, 0, 2, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.layoutWidget)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 1, 0, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout_2)
        self.layoutWidget1 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(1030, 10, 195, 81))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.pb_new = QtWidgets.QPushButton(self.layoutWidget1)
        self.pb_new.setObjectName("pb_new")
        self.gridLayout_3.addWidget(self.pb_new, 0, 0, 1, 1)
        self.pb_add = QtWidgets.QPushButton(self.layoutWidget1)
        self.pb_add.setEnabled(False)
        self.pb_add.setObjectName("pb_add")
        self.gridLayout_3.addWidget(self.pb_add, 0, 1, 1, 1)
        self.pb_change = QtWidgets.QPushButton(self.layoutWidget1)
        self.pb_change.setEnabled(False)
        self.pb_change.setObjectName("pb_change")
        self.gridLayout_3.addWidget(self.pb_change, 1, 0, 1, 1)
        self.pb_del = QtWidgets.QPushButton(self.layoutWidget1)
        self.pb_del.setEnabled(False)
        self.pb_del.setObjectName("pb_del")
        self.gridLayout_3.addWidget(self.pb_del, 1, 1, 1, 1)
        self.layoutWidget2 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget2.setGeometry(QtCore.QRect(30, 110, 811, 26))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_11 = QtWidgets.QLabel(self.layoutWidget2)
        self.label_11.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_2.addWidget(self.label_11)
        self.time_s = QtWidgets.QDateEdit(self.layoutWidget2)
        self.time_s.setObjectName("time_s")
        self.horizontalLayout_2.addWidget(self.time_s)
        self.time_s.setDisplayFormat('yyyy/MM/dd')
        self.label_14 = QtWidgets.QLabel(self.layoutWidget2)
        self.label_14.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_2.addWidget(self.label_14)
        self.q_dept = QtWidgets.QComboBox(self.layoutWidget2)
        self.q_dept.setObjectName("ApplyDept")
        self.horizontalLayout_2.addWidget(self.q_dept)
        self.label_13 = QtWidgets.QLabel(self.layoutWidget2)
        self.label_13.setMaximumSize(QtCore.QSize(50, 16777215))
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_2.addWidget(self.label_13)
        self.maker = QtWidgets.QComboBox(self.layoutWidget2)
        self.maker.setObjectName("person")
        self.horizontalLayout_2.addWidget(self.maker)
        self.label_17 = QtWidgets.QLabel(self.layoutWidget2)
        self.label_17.setMaximumSize(QtCore.QSize(90, 16777215))
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_2.addWidget(self.label_17)
        self.q_pay_dept = QtWidgets.QComboBox(self.layoutWidget2)
        self.q_pay_dept.setObjectName("FeeDept")
        self.horizontalLayout_2.addWidget(self.q_pay_dept)
        self.layoutWidget3 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget3.setGeometry(QtCore.QRect(230, 140, 611, 26))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_15 = QtWidgets.QLabel(self.layoutWidget3)
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_3.addWidget(self.label_15)
        self.code_name = QtWidgets.QLineEdit(self.layoutWidget3)
        self.code_name.setMaximumSize(QtCore.QSize(200, 16777215))
        self.code_name.setObjectName("code_name")
        self.horizontalLayout_3.addWidget(self.code_name)
        self.label_16 = QtWidgets.QLabel(self.layoutWidget3)
        self.label_16.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_16.setObjectName("label_16")
        self.horizontalLayout_3.addWidget(self.label_16)
        self.reason = QtWidgets.QLineEdit(self.layoutWidget3)
        self.reason.setMaximumSize(QtCore.QSize(250, 16777215))
        self.reason.setObjectName("reason")
        self.horizontalLayout_3.addWidget(self.reason)
        self.layoutWidget4 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget4.setGeometry(QtCore.QRect(30, 140, 191, 26))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_12 = QtWidgets.QLabel(self.layoutWidget4)
        self.label_12.setMaximumSize(QtCore.QSize(60, 16777215))
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_4.addWidget(self.label_12)
        self.time_e = QtWidgets.QDateEdit(self.layoutWidget4)
        self.time_e.setObjectName("time_e")

        self.horizontalLayout_4.addWidget(self.time_e)
        self.time_e.setDisplayFormat('yyyy/MM/dd')
        self.layoutWidget5 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget5.setGeometry(QtCore.QRect(850, 110, 245, 51))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.layoutWidget5)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.chb_out = QtWidgets.QCheckBox(self.layoutWidget5)
        self.chb_out.setObjectName("chb_out")
        self.gridLayout_4.addWidget(self.chb_out, 1, 0, 1, 1)
        self.chb_back = QtWidgets.QCheckBox(self.layoutWidget5)
        self.chb_back.setObjectName("chb_back")
        self.gridLayout_4.addWidget(self.chb_back, 0, 1, 1, 1)
        self.chb_get = QtWidgets.QCheckBox(self.layoutWidget5)
        self.chb_get.setObjectName("chb_get")
        self.gridLayout_4.addWidget(self.chb_get, 1, 1, 1, 1)
        self.chb_done = QtWidgets.QCheckBox(self.layoutWidget5)
        self.chb_done.setObjectName("chb_done")
        self.gridLayout_4.addWidget(self.chb_done, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1239, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        # conn=datahandle.dataoperate()
        # conn.initial("scott/zmk123_@0.0.0.0/demo")
        # self.cursor=conn.cursor
        self.cursor = self.data.cursor

        self.cursor.execute("select * from curveapply")
        data=self.cursor.fetchall()
        self.n=len(data)+1
        self.cursor.execute("select * from curveapply")
        self.table_show()
        self.stands_form = None
        self.area_A = [self.cb_dept, self.cb_name, self.cb_type, self.cb_shape,
                       self.cb_size, self.cb_mat, self.cb_font, self.cb_use,
                       self.cb_reason,self.cb_pay_dept]

        self.area_B = [self.q_dept, self.maker, self.q_pay_dept]
        self.datatable = ['deptname','sealname','SealType', 'SealShape', 'Sealsize', 'Sealmaterial',
                          'Sealfont', 'Sealuse','sealcurreason','deptname']
        self.jump_group = [self.pb_type, self.pb_shape, self.pb_size,
                           self.pb_mat, self.pb_font, self.pb_use, self.pb_reason]

        self.jump_set = dict(zip([n.objectName() for n in self.jump_group], range(7)))

        # self.setup_combo_box_all()

        def makefunc(pb):
            n=pb.objectName()
            return lambda : self.jump_to_stands(n)

        for cb in self.area_A:
            cb.setEnabled(False)
            self.pb_new.clicked['bool'].connect(cb.setDisabled)
            self.pb_add.clicked['bool'].connect(cb.setEnabled)

        for pb in self.jump_group:
            pb.clicked['bool'].connect(makefunc(pb))

        self.tableWidget.clicked.connect(self.table_slot)
        self.pb_add.clicked['bool'].connect(self.table_add)
        self.pb_new.clicked['bool'].connect(self.pb_add.setDisabled)
        self.pb_new.clicked['bool'].connect(self.setup_combo_box)
        self.pb_new.clicked['bool'].connect(self.pb_new.setEnabled)
        self.pb_del.clicked['bool'].connect(self.table_del)
        self.pb_change.clicked['bool'].connect(self.table_change)
        self.pb_query.clicked['bool'].connect(self.table_query)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pb_query.setText(_translate("MainWindow", "查询"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "申请单号"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "申请部门"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "申请人"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "制单时间"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "印章编码"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "印章名称"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "费用承担部门"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "刻章原因"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "印章类型"))
        item = self.tableWidget.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "印章形状"))
        item = self.tableWidget.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "印章尺寸"))
        item = self.tableWidget.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "印章材质"))
        item = self.tableWidget.horizontalHeaderItem(12)
        item.setText(_translate("MainWindow", "印章字体"))
        item = self.tableWidget.horizontalHeaderItem(13)
        item.setText(_translate("MainWindow", "印章用途"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章材质</p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章尺寸</p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">费用承担部门</p></body></html>"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">所在部门</p></body></html>"))
        self.pb_size.setText(_translate("MainWindow", "..."))
        self.pb_mat.setText(_translate("MainWindow", "..."))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章名称</p></body></html>"))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章用途</p></body></html>"))
        self.pb_reason.setText(_translate("MainWindow", "..."))
        self.pb_shape.setText(_translate("MainWindow", "..."))
        self.pb_font.setText(_translate("MainWindow", "..."))
        self.pb_use.setText(_translate("MainWindow", "..."))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">刻章原因</p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章形状</p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章类型</p><p align=\"right\"><br/></p></body></html>"))
        self.pb_type.setText(_translate("MainWindow", "..."))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章字体</p></body></html>"))
        self.pb_new.setText(_translate("MainWindow", "新建"))
        self.pb_add.setText(_translate("MainWindow", "添加"))
        self.pb_change.setText(_translate("MainWindow", "修改"))
        self.pb_del.setText(_translate("MainWindow", "删除"))
        self.label_11.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">制单时间</p></body></html>"))
        self.label_14.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">制单部门</p></body></html>"))
        self.label_13.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">制单人</p></body></html>"))
        self.label_17.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">费用承担部门</p></body></html>"))
        self.label_15.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">印章编码/名称</p></body></html>"))
        self.label_16.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">刻章原因</p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\">==&gt;</p></body></html>"))
        self.chb_out.setText(_translate("MainWindow", "隐藏已送外刻章"))
        self.chb_back.setText(_translate("MainWindow", "隐藏已回厂"))
        self.chb_get.setText(_translate("MainWindow", "隐藏已领用"))
        self.chb_done.setText(_translate("MainWindow", "隐藏审核完成"))

        self.tableWidget.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableWidget.setSelectionMode(QAbstractItemView.SingleSelection)

    def jump_to_stands(self, pb):
        if self.stands_form == None:
            self.stands_form = QtWidgets.QMainWindow()
            self.ui = SealStandards.Ui_SealStandards()
            self.ui.setupUi(self.stands_form)
            self.stands_form.show()
            self.ui.tableWidget_A.selectRow(self.jump_set[pb])
            self.ui.tableA_slot()
            #self.stands_form = None

        elif isinstance(self.stands_form,QMainWindow):
            self.stands_form.show()
            self.stands_form.raise_()
            self.ui.tableWidget_A.selectRow(self.jump_set[pb])
            self.ui.tableA_slot()


    def setup_combo_box(self):

        for (table, cb) in zip(self.datatable, self.area_A):
            cb.clear()
            sql = "select standname from " + table
            self.cursor.execute(sql)
            result = self.cursor.fetchall()
            if len(result) == 0:
                result.append('无')
            t = list()
            for row in result:
                t.append(row[0])
            cb.addItems(t)

    def table_query(self):
        sql = "select * from curveapply where"
        text1=self.code_name.text()
        text2=self.reason.text()
        if len(text1)!=0 and len(text2)!=0:
            sql2="select * from curveapply where sealname="+repr(text1)
            self.cursor.execute(sql2)
            result = self.cursor.fetchall()
            if len(result)==0:
                sql3 = "select * from seal where sealnum="+repr(text1)
                self.cursor.execute(sql3)
                result = self.cursor.fetchall()
                if len(result) == 0:
                    QtWidgets.QMessageBox.information(self.Form, 'Message',
                                                      "查询失败!无此印章名称/编码！")
                    for i in range(0, self.tableWidget.rowCount()):
                        self.tableWidget.removeRow(0)
                    return
                test=list()
                for row in result:
                    test.append(row[1])
                sql=sql+" sealname="+repr(test[0])+" and sealcurreason="+repr(text2)+" and"
            else:
                sql = sql + " sealname=" + repr(text1) + " and sealcurreason=" + repr(text2)+" and"
        elif len(text1)!=0:
            sql2 = "select * from curveapply where sealname=" + repr(text1)
            self.cursor.execute(sql2)
            result = self.cursor.fetchall()
            if len(result) == 0:
                sql3 = "select * from seal where sealnum=" + repr(text1)
                self.cursor.execute(sql3)
                result = self.cursor.fetchall()
                if len(result) == 0:
                    QtWidgets.QMessageBox.information(self.Form, 'Message',
                                                      "查询失败!无此印章名称/编码！")
                    for i in range(0, self.tableWidget.rowCount()):
                        self.tableWidget.removeRow(0)
                    return
                test = list()
                for row in result:
                    test.append(row[1])
                sql = sql + " sealname=" + repr(test[0])+" and"
            else:
                sql = sql + " sealname=" + repr(text1)+" and"
        elif len(text2)!=0:
            sql = sql + " sealcurreason=" + repr(text2)+" and"
        sql=sql+" applydate>="+repr(self.time_s.text())+" and applydate<="+repr(self.time_e.text())
        self.cursor.execute(sql)
        result=self.cursor.fetchall()
        if len(result)==0:
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                                  "查询失败!无数据！")
            for i in range(0, self.tableWidget.rowCount()):
                self.tableWidget.removeRow(0)
            return
        else:
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                              "查询成功!")
        self.cursor.execute(sql)
        self.table_show()
    def table_show(self):
        result = self.cursor.fetchall()
        test = list()
        for row in result:
            for i in row:
                test.append(i)
        if len(test)!=0:

            item_code = QTableWidgetItem(test[11])
            item_code.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_dept = QTableWidgetItem(test[0])
            item_dept.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_name = QTableWidgetItem(test[1])
            item_name.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_type = QTableWidgetItem(test[2])
            item_type.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_shape = QTableWidgetItem(test[3])
            item_shape.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_size = QTableWidgetItem(test[4])
            item_size.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_mat = QTableWidgetItem(test[5])
            item_mat.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_font = QTableWidgetItem(test[6])
            item_font.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_use = QTableWidgetItem(test[7])
            item_use.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_pay_dept = QTableWidgetItem(test[8])
            item_pay_dept.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            item_reason = QTableWidgetItem(test[9])
            item_reason.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)

            # 申请人先空着
            item_applicant = QTableWidgetItem('')
            item_reason.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)

            item_time = QTableWidgetItem(test[10])
            item_time.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            # 印章编码通过标准管理的表获取
            sql = "select sealnum from seal where sealname=" + repr(test[1])
            self.cursor.execute(sql)
            data = self.cursor.fetchall()
            for row in data:
                item_SealNum = QTableWidgetItem(row[0])
                item_SealNum.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
            for i in range(0, self.tableWidget.rowCount()):
                self.tableWidget.removeRow(0)
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            self.tableWidget.setItem(rowPosition, 0, item_code)
            self.tableWidget.setItem(rowPosition, 1, item_dept)
            self.tableWidget.setItem(rowPosition, 2, item_applicant)
            self.tableWidget.setItem(rowPosition, 3, item_time)
            self.tableWidget.setItem(rowPosition, 4, item_SealNum)
            self.tableWidget.setItem(rowPosition, 5, item_name)
            self.tableWidget.setItem(rowPosition, 6, item_pay_dept)
            self.tableWidget.setItem(rowPosition, 7, item_reason)
            self.tableWidget.setItem(rowPosition, 8, item_type)
            self.tableWidget.setItem(rowPosition, 9, item_shape)
            self.tableWidget.setItem(rowPosition, 10, item_size)
            self.tableWidget.setItem(rowPosition, 11, item_mat)
            self.tableWidget.setItem(rowPosition, 12, item_font)
            self.tableWidget.setItem(rowPosition, 13, item_use)
    def table_add(self):
        """获取A区数据存入数据库，显示在C区"""
        #p=database.xxx  连接数据库获得历史创建过的刻制单数量self.n
        order_code = "CA"+str(self.n).zfill(6) #订单编码

        rowPosition = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowPosition)

        item_code = QTableWidgetItem(order_code)
        item_code.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_dept = QTableWidgetItem(str(self.cb_dept.currentText()))
        item_dept.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_name = QTableWidgetItem(str(self.cb_name.currentText()))
        item_name.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_type = QTableWidgetItem(str(self.cb_type.currentText()))
        item_type.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_shape = QTableWidgetItem(str(self.cb_shape.currentText()))
        item_shape.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_size = QTableWidgetItem(str(self.cb_size.currentText()))
        item_size.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_mat = QTableWidgetItem(str(self.cb_mat.currentText()))
        item_mat.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_font = QTableWidgetItem(self.cb_font.currentText())
        item_font.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_use = QTableWidgetItem(self.cb_use.currentText())
        item_use.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_pay_dept = QTableWidgetItem(self.cb_pay_dept.currentText())
        item_pay_dept.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        item_reason = QTableWidgetItem(self.cb_reason.currentText())
        item_reason.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)

        #申请人先空着
        item_applicant = QTableWidgetItem('')
        item_reason.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        #制单时间自动获取
        date=QtCore.QDate.currentDate().toString("yyyy/MM/dd")
        item_time = QTableWidgetItem(date)
        item_time.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        #印章编码通过标准管理的表获取
        sql="select sealnum from seal where sealname="+repr(self.cb_name.currentText())
        self.cursor.execute(sql)
        data=self.cursor.fetchall()
        for row in data:
            item_SealNum = QTableWidgetItem(row[0])
            item_SealNum.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
        '''存入数据库'''
        sql="insert into curveapply values("+repr(self.cb_dept.currentText())
        columnlist=[self.cb_name, self.cb_type, self.cb_shape,
                       self.cb_size, self.cb_mat, self.cb_font, self.cb_use,
                       self.cb_pay_dept,self.cb_reason]
        for column in columnlist:
            sql=sql+','+repr(column.currentText())
        sql=sql+','+repr(date)+','+repr(order_code)+')'
        try:
            self.cursor.execute(sql)
            self.data.conn.commit()
            self.tableWidget.setItem(rowPosition, 0, item_code)
            self.tableWidget.setItem(rowPosition, 1, item_dept)
            self.tableWidget.setItem(rowPosition, 2, item_applicant)
            self.tableWidget.setItem(rowPosition, 3, item_time)
            self.tableWidget.setItem(rowPosition, 4, item_SealNum)
            self.tableWidget.setItem(rowPosition, 5, item_name)
            self.tableWidget.setItem(rowPosition, 6, item_pay_dept)
            self.tableWidget.setItem(rowPosition, 7, item_reason)
            self.tableWidget.setItem(rowPosition, 8, item_type)
            self.tableWidget.setItem(rowPosition, 9, item_shape)
            self.tableWidget.setItem(rowPosition, 10, item_size)
            self.tableWidget.setItem(rowPosition, 11, item_mat)
            self.tableWidget.setItem(rowPosition, 12, item_font)
            self.tableWidget.setItem(rowPosition, 13, item_use)

            self.pb_add.setEnabled(False)
            self.pb_new.setEnabled(True)
            self.n = self.n + 1
            for cb in self.area_A:
                cb.clear()
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                              "添加成功!")
        except:
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                              "添加失败!该印章已申请刻制！")
            return

    def table_slot(self):
        """获取表中的信息显示在右边"""
        row_select = self.tableWidget.selectedItems()
        if len(row_select) == 0:
            return
        self.pb_change.setEnabled(True)
        self.pb_del.setEnabled(True)
        self.pb_new.setEnabled(False)
        for cb in self.area_A:
            cb.setEnabled(True)
        self.cb_name.setEnabled(False)
        for (table, cb) in zip(self.datatable, self.area_A):
            cb.clear()
            sql = "select standname from " + table
            self.cursor.execute(sql)
            result = self.cursor.fetchall()
            if len(result) == 0:
                result.append('无')
            t = list()
            for row in result:
                t.append(row[0])
            cb.addItems(t)
        row = row_select[0].row()
        self.cb_dept.setCurrentText(self.tableWidget.item(row,1).text())
        self.cb_name.setCurrentText(self.tableWidget.item(row,5).text())
        self.cb_type.setCurrentText(self.tableWidget.item(row,8).text())
        self.cb_shape.setCurrentText(self.tableWidget.item(row,9).text())
        self.cb_size.setCurrentText(self.tableWidget.item(row,10).text())
        self.cb_mat.setCurrentText(self.tableWidget.item(row,11).text())
        self.cb_font.setCurrentText(self.tableWidget.item(row,12).text())
        self.cb_use.setCurrentText(self.tableWidget.item(row,13).text())
        self.cb_pay_dept.setCurrentText(self.tableWidget.item(row,6).text())
        self.cb_reason.setCurrentText(self.tableWidget.item(row,7).text())


    def table_del(self):
        row_select = self.tableWidget.selectedItems()
        if len(row_select) == 0:
            return

        row = row_select[0].row()
        self.tableWidget.removeRow(row)
        # 以下从数据库中删除数据
        try:
            sql="delete from curveapply where sealname="+repr(self.cb_name.currentText())
            self.cursor.execute(sql)
            self.pb_change.setEnabled(False)
            self.pb_del.setEnabled(False)
            self.pb_new.setEnabled(True)
            for cb in self.area_A:
                cb.setEnabled(False)
            self.data.conn.commit()
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                              "删除成功!")
        except:
            QtWidgets.QMessageBox.information(self.Form, 'Message',
                                              "删除失败!")
        for cb in self.area_A:
            cb.clear()

    def table_change(self):
        """
        选择A区域的某行进行修改
        """
        row_select = self.tableWidget.selectedItems()
        if len(row_select) == 0:
            return
        row = row_select[0].row()


        """
        连接数据库修改数据
        """
        sql = "update curveapply set atdept="+repr(self.cb_dept.currentText())
        table=['sealname','sealtype','sealshape','sealsize','sealmaterial',
               'sealfont','sealuse','paydept','sealcurreason']
        cb=[self.cb_name, self.cb_type, self.cb_shape,
                       self.cb_size, self.cb_mat, self.cb_font, self.cb_use,
                       self.cb_pay_dept,self.cb_reason]
        for (i,j) in zip(table,cb):
            sql=sql+","+i+"="+repr(j.currentText())
        sql=sql+" where sealname="+repr(self.cb_name.currentText())
        self.cursor.execute(sql)
        self.pb_change.setEnabled(False)
        self.pb_del.setEnabled(False)

        row = row_select[0].row()
        self.tableWidget.item(row, 1).setText(self.cb_dept.currentText())
        self.tableWidget.item(row, 5).setText(self.cb_name.currentText())
        self.tableWidget.item(row, 6).setText(self.cb_pay_dept.currentText())
        self.tableWidget.item(row, 7).setText(self.cb_reason.currentText())
        self.tableWidget.item(row, 8).setText(self.cb_type.currentText())
        self.tableWidget.item(row, 9).setText(self.cb_shape.currentText())
        self.tableWidget.item(row, 10).setText(self.cb_size.currentText())
        self.tableWidget.item(row, 11).setText(self.cb_mat.currentText())
        self.tableWidget.item(row, 12).setText(self.cb_font.currentText())
        self.tableWidget.item(row, 13).setText(self.cb_use.currentText())

        QtWidgets.QMessageBox.information(self.Form, 'Message',
                                          "修改成功!")
        for cb in self.area_A:
            cb.setCurrentText('')
        self.data.conn.commit()
    def innitial(self,u):
        self.data=u
if __name__ == "__main__":
    app = QApplication(sys.argv)
    handover = QMainWindow()
    ui_handover = Ui_CurveApply()
    ui_handover.setupUi(handover)
    handover.show()
    sys.exit(app.exec_())
